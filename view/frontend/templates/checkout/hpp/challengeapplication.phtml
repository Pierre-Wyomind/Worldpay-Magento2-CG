<?php
    $data = $block->challengeConfigs();
    $threeDSecureChallengeConfig = $data['threeDSecureChallengeConfig'] ;
    $threeDSecureChallengeParams = $data['threeDSecureChallengeParams'] ;
?>
    <!-- An example 3DS2 challenge window size. -->
    <form name= "iframe_challengeForm" 
          id="challengeForm"
          method= "POST"
          action="<?= /* @noEscape */ $threeDSecureChallengeConfig["challengeurl"] ?>">
    <!-- 
    Use the above Challenge URL for test, we will provide a static Challenge URL for production once you go live 
    -->
        <input type = "hidden" name= "JWT" id= "challenge_jwt" value= "" />
        <!-- Encoding of the JWT above with the secret "worldpaysecret". -->
        <input type="hidden" name="MD" value="<?= /* @noEscape */ $data['orderId'] ?>" />
        <!-- 
        Extra field for you to pass data in to the challenge that will be included in the post 
        back to the return URL after challenge complete 
        -->
    </form>
               
    
    <script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/hmac-sha256.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64-min.js"></script>
    <script language="Javascript">
    var header = {
        "typ": "JWT",
        "alg": "HS256"
    };

    var iat = Math.floor(new Date().getTime()/1000);
    var jti = uuidv4();
    var data = {
        "jti": jti,
        "iat": iat,
        "iss": "<?= /* @noEscape */ $threeDSecureChallengeConfig["jwtIssuer"]?>",
        "OrgUnitId": "<?= /* @noEscape */ $threeDSecureChallengeConfig["organisationalUnitId"] ?>",
        "ReturnUrl": "<?= /* @noEscape */ $data['redirectUrl'] ?>",
        "Payload": {
            "ACSUrl": "<?= /* @noEscape */ $threeDSecureChallengeParams['acsURL']?>",
            "Payload": "<?= /* @noEscape */ $threeDSecureChallengeParams['payload']?>",
            "TransactionId": "<?= /* @noEscape */ $threeDSecureChallengeParams['transactionId3DS']?>"
        },
        "ObjectifyPayload": true
    };
    var secret = "<?= /* @noEscape */ $threeDSecureChallengeConfig['jwtApiKey']?>";

    var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));
    var encodedHeader = base64url(stringifiedHeader);

    var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(data));
    var encodedData = base64url(stringifiedData);

    var signature = encodedHeader + "." + encodedData;
    signature = CryptoJS.HmacSHA256(signature, secret);
    signature = base64url(signature);
    var encodedJWT = encodedHeader + "." + encodedData + "." + signature;
    document.getElementById("challenge_jwt").value = encodedJWT;
    function uuidv4() {
        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
        );
    }

    function base64url(source) {
        // Encode in classical base64
        var encodedSource = CryptoJS.enc.Base64.stringify(source);

        // Remove padding equal characters
        encodedSource = encodedSource.replace(/=+$/, "");

        // Replace characters according to base64url specifications
        encodedSource = encodedSource.replace(/\+/g, "-");
        encodedSource = encodedSource.replace(/\//g, "_");

        return encodedSource;
    }
    window.onload = function()
    {
      // Auto submit form on page load
      document.getElementById("challengeForm").submit();
    }
    </script>
    
